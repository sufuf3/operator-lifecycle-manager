apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: origin
  name: origin
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      run: origin
  template:
    metadata:
      labels:
        run: origin
    spec:
      containers:
      - image: quay.io/openshift/origin-console:v3.11.0
        imagePullPolicy: Always
        name: console
        env:
        - name: BRIDGE_USER_AUTH
          value: disabled # must be one of: oidc, disabled
        - name: BRIDGE_K8S_MODE
          value: off-cluster
        - name: BRIDGE_K8S_MODE_OFF_CLUSTER_ENDPOINT
          value: $(kubectl config view -o json | jq '{myctx: .["current-context"], ctxs: .contexts[], clusters: .clusters[]}' | jq 'select(.myctx == .ctxs.name)' | jq 'select(.ctxs.context.cluster ==  .clusters.name)' | jq '.clusters.cluster.server' -r)
        - name: BRIDGE_K8S_MODE_OFF_CLUSTER_SKIP_VERIFY_TLS
          value: "true"
        - name: BRIDGE_K8S_AUTH
          value: bearer-token
        - name: BRIDGE_K8S_AUTH_BEARER_TOKEN
          value: $(kubectl get secret "$(kubectl get serviceaccount default --namespace=kube-system -o jsonpath='{.secrets[0].name}')" --namespace=kube-system -o template --template='{{.data.token}}' | base64 --decode)
        ports:
        - containerPort: 9000
          protocol: TCP
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: dashboard
  namespace: kube-system
  labels:
    run: origin
spec:
  type: NodePort
  ports:
  - port: 9000
    targetPort: 9000
    nodePort: 31900
    protocol: TCP
    name: http
  selector:
    run: origin
